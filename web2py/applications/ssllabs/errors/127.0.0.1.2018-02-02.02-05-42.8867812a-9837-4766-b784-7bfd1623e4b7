(dp1
S'output'
p2
S'missing "pass" in view'
p3
sS'layer'
p4
S'ParserContainer'
p5
sS'code'
p6
S'response.write(\'<!DOCTYPE html>\\n<!--[if (gt IE 9)|!(IE)]><!--> <html class="no-js" lang="\', escape=False)\nresponse.write(T.accepted_language or \'en\')\nresponse.write(\'"> <!--<![endif]-->\\n  <head>\\n    <meta charset="utf-8">\\n    <!-- www.phpied.com/conditional-comments-block-downloads/ -->\\n    <!-- Always force latest IE rendering engine\\n         (even in intranet) & Chrome Frame\\n         Remove this if you use the .htaccess -->\\n    <meta http-equiv="X-UA-Compatible" content="IE=edge\', escape=False)\nresponse.write(not request.is_local and \',chrome=1\' or \'\')\nresponse.write(\'">\\n    <!--  Mobile Viewport Fix\\n          j.mp/mobileviewport & davidbcalhoun.com/2010/viewport-metatag\\n          device-width: Occupy full width of the screen in its current orientation\\n          initial-scale = 1.0 retains dimensions instead of zooming out if page height > device height\\n          user-scalable = yes allows the user to zoom in -->\\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\\n    <title>\', escape=False)\nresponse.write(response.title or request.application)\nresponse.write(\'</title>\\n    <!-- http://dev.w3.org/html5/markup/meta.name.html -->\\n    <meta name="application-name" content="\', escape=False)\nresponse.write(request.application)\nresponse.write(\'">\\n    <!-- Speaking of Google, don\\\'t forget to set your site up:\\n         http://google.com/webmasters -->\\n    <meta name="google-site-verification" content="">\\n    <!-- include stylesheets -->\\n    <link rel="stylesheet" href="\', escape=False)\nresponse.write(URL(\'static\',\'css/bootstrap.min.css\'))\nresponse.write(\'"/>\\n    <link rel="stylesheet" href="\', escape=False)\nresponse.write(URL(\'static\',\'css/web2py-bootstrap3.css\'))\nresponse.write(\'"/>\\n    <link rel="shortcut icon" href="\', escape=False)\nresponse.write(URL(\'static\',\'images/favicon.ico\'))\nresponse.write(\'" type="image/x-icon">\\n    <link rel="apple-touch-icon" href="\', escape=False)\nresponse.write(URL(\'static\',\'images/favicon.png\'))\nresponse.write(\'">\\n    <!-- All JavaScript at the bottom, except for Modernizr which enables\\n         HTML5 elements & feature detects -->\\n    <script src="\', escape=False)\nresponse.write(URL(\'static\',\'js/modernizr-2.8.3.min.js\'))\nresponse.write(\'"></script>\\n    <!--[if lt IE 9]>\\n        <script src="\', escape=False)\nresponse.write(URL(\'static\',\'js/respond-1.4.2.min.js\'))\nresponse.write(\'"></script>\\n        <![endif]-->\\n    <!-- Favicons -->\\n    \', escape=False)\nresponse.write(\'<script type="text/javascript"><!--\\n    // These variables are used by the web2py_ajax_init function in web2py_ajax.js (which is loaded below).\\n    var w2p_ajax_confirm_message = "\', escape=False)\nresponse.write(T(\'Are you sure you want to delete this object?\'))\nresponse.write(\'";\\n    var w2p_ajax_disable_with_message = "\', escape=False)\nresponse.write(T(\'Working...\'))\nresponse.write(\'";\\n    var w2p_ajax_date_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d\'))\nresponse.write(\'";\\n    var w2p_ajax_datetime_format = "\', escape=False)\nresponse.write(T(\'%Y-%m-%d %H:%M:%S\'))\nresponse.write(\'";\\n    var ajax_error_500 = \\\'\', escape=False)\nresponse.write(T.M(\'An error occured, please [[reload %s]] the page\') % URL(args=request.args, vars=request.get_vars))\nresponse.write("\'\\n    //--></script>\\n", escape=False)\nresponse.files.insert(0,URL(\'static\',\'js/jquery.js\'))\nresponse.files.insert(1,URL(\'static\',\'css/calendar.css\'))\nresponse.files.insert(2,URL(\'static\',\'js/calendar.js\'))\nresponse.files.insert(3,URL(\'static\',\'js/web2py.js\'))\nresponse.include_meta()\nresponse.include_files()\nresponse.write(\'\\n\', escape=False)\nresponse.write(\' <!-- this includes jquery.js, calendar.js/.css and web2py.js -->\\n    \', escape=False)\nresponse.write(\'\\n    \', escape=False)\n# using sidebars need to know what sidebar you want to use\nmc0 = \'col-md-12\'\nmc1 = \'col-md-9\'\nmc2 = \'col-md-6\'\nleft_sidebar_enabled = globals().get(\'left_sidebar_enabled\', False)\nright_sidebar_enabled = globals().get(\'right_sidebar_enabled\', False)\nmiddle_column = {0: mc0, 1: mc1, 2: mc2}[\n(left_sidebar_enabled and 1 or 0)+(right_sidebar_enabled and 1 or 0)]\nresponse.write(\'\\n  </head>\\n  <body>\\n    <!--[if lt IE 8]><p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p><![endif]-->\\n    <div class="w2p_flash alert alert-dismissable">\', escape=False)\nresponse.write(response.flash or \'\')\nresponse.write(\'</div>\\n    <!-- Navbar ======================================= -->\\n    <nav class="navbar navbar-default navbar-fixed-top" role="navigation">\\n      <div class="container-fluid">\\n        <div class="navbar-header">\\n          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">\\n            <span class="sr-only">Toggle navigation</span>\\n            <span class="icon-bar"></span>\\n            <span class="icon-bar"></span>\\n            <span class="icon-bar"></span>\\n          </button>\\n          \', escape=False)\nresponse.write(response.logo or \'\')\nresponse.write(\'\\n        </div>\\n        <div class="collapse navbar-collapse navbar-ex1-collapse">\\n          <ul class="nav navbar-nav navbar-right">\\n            \', escape=False)\nresponse.write(\'auth\' in globals() and auth.navbar(\'Welcome\',mode=\'dropdown\') or \'\')\nresponse.write(\'\\n          </ul>\\n          \', escape=False)\nif response.menu:\n    response.write(\'\\n          \', escape=False)\n    response.write(MENU(response.menu, _class=\'nav navbar-nav\',li_class=\'dropdown\',ul_class=\'dropdown-menu\'))\n    response.write(\'\\n          \', escape=False)\n    pass\nresponse.write(\'\\n        </div>\\n      </div>\\n    </nav>\\n    <!-- Masthead ===================================== -->    \\n    \', escape=False)\nresponse.write(\'\\n    \', escape=False)\nresponse.write(\'\\n    <!-- Main ========================================= -->\\n    <!-- Begin page content -->\\n    <div class="container-fluid main-container">\\n      \', escape=False)\nif left_sidebar_enabled:\n    response.write(\'\\n        <div class="col-md-3 left-sidebar">\\n            \', escape=False)\n    response.write(\'\\n            <h3>Left Sidebar</h3>\\n            <p></p>\\n            \', escape=False)\n    response.write(\'\\n        </div>\\n      \', escape=False)\n    pass\nresponse.write(\'\\n\\n      <div class="\', escape=False)\nresponse.write(middle_column)\nresponse.write(\'">\\n        \', escape=False)\nresponse.write(\'\\n        \', escape=False)\nresponse.write(\'\\n<!DOCTYPE html>\\n<html lang="en">\\n<head>\\n    <meta charset="UTF-8">\\n    <title>Title</title>\\n</head>\\n<body>\\n\', escape=False)\nfor each in output:\n    response.write(\'\\n\', escape=False)\n    response.write(P(A(each)))\n    response.write(\'\\n</body>\\n</html>\\n\', escape=False)\n    response.write(response.toolbar())\n    response.write(\'\\n        \', escape=False)\n    response.write(\'\\n      </div>\\n\\n      \', escape=False)\n    if right_sidebar_enabled:\n        response.write(\'\\n        <div class="col-md-3">\\n            \', escape=False)\n        response.write(\'\\n            <h3>Right Sidebar</h3>\\n            <p></p>\\n            \', escape=False)\n        response.write(\'\\n        </div>\\n      \', escape=False)\n        pass\n    response.write(\'\\n\\n    </div>\\n\\n    \', escape=False)\n    response.write(\' <!-- this is default footer -->      \\n    <footer class="footer">\\n      <div class="container-fluid">\\n        <div class="copyright pull-left">\', escape=False)\n    response.write(T(\'Copyright\'))\n    response.write(\' &#169; \', escape=False)\n    response.write(request.now.year)\n    response.write(\'</div>\\n          <div id="poweredBy" class="pull-right">\\n            \', escape=False)\n    response.write(T(\'Powered by\'))\n    response.write(\'\\n            <a href="http://www.web2py.com/">web2py</a>\\n          </div>\\n      </div>\\n    </footer>\\n    \', escape=False)\n    response.write(\'\\n    <!-- The javascript =============================== -->\\n    <script src="\', escape=False)\n    response.write(URL(\'static\',\'js/bootstrap.min.js\'))\n    response.write(\'"></script>\\n    <script src="\', escape=False)\n    response.write(URL(\'static\',\'js/web2py-bootstrap3.js\'))\n    response.write(\'"></script>\\n    \', escape=False)\n    response.write(\'\\n    \', escape=False)\n    if response.google_analytics_id:\n        response.write(\'\\n    <!-- Analytics ==================================== -->\\n    <script src="\', escape=False)\n        response.write(URL(\'static\',\'js/analytics.min.js\'))\n        response.write(\'"></script>\\n    <script type="text/javascript">\\n      analytics.initialize({\\n      \\\'Google Analytics\\\':{trackingId:\\\'\', escape=False)\n        response.write(response.google_analytics_id)\n        response.write("\'}\\n      });\\n    </script>\\n    ", escape=False)\n        pass\n    response.write(\'\\n    <!-- Share ============================y============ -->\\n    <script src="\', escape=False)\n    response.write(URL(\'static\',\'js/share.js\',vars=dict(static=URL(\'static\',\'images\'))))\n    response.write(\'"></script>\\n  </body>\\n</html>\\n\', escape=False)'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__module__'
p12
S"'ssl'"
p13
sS'__getslice__'
p14
S"<method-wrapper '__getslice__' of SSLError object>"
p15
sS'__str__'
p16
S"<method-wrapper '__str__' of SSLError object>"
p17
sS'__reduce__'
p18
S'<built-in method __reduce__ of SSLError object>'
p19
sS'__dict__'
p20
S'{}'
p21
sS'__sizeof__'
p22
S'<built-in method __sizeof__ of SSLError object>'
p23
sS'__weakref__'
p24
S'None'
p25
sS'__init__'
p26
S"<method-wrapper '__init__' of SSLError object>"
p27
sS'__setattr__'
p28
S"<method-wrapper '__setattr__' of SSLError object>"
p29
sS'__reduce_ex__'
p30
S'<built-in method __reduce_ex__ of SSLError object>'
p31
sS'__new__'
p32
S'<built-in method __new__ of type object>'
p33
sS'errno'
p34
S'None'
p35
sS'__format__'
p36
S'<built-in method __format__ of SSLError object>'
p37
sS'__class__'
p38
S"<class 'ssl.SSLError'>"
p39
sS'filename'
p40
S'None'
p41
sS'__doc__'
p42
S"'An error occurred in the SSL implementation.'"
p43
sS'__getitem__'
p44
S"<method-wrapper '__getitem__' of SSLError object>"
p45
sS'__setstate__'
p46
S'<built-in method __setstate__ of SSLError object>'
p47
sS'__getattribute__'
p48
S"<method-wrapper '__getattribute__' of SSLError object>"
p49
sS'args'
p50
S"('The read operation timed out',)"
p51
sS'__subclasshook__'
p52
S'<built-in method __subclasshook__ of type object>'
p53
sS'__unicode__'
p54
S'<built-in method __unicode__ of SSLError object>'
p55
sS'strerror'
p56
S'None'
p57
sS'__delattr__'
p58
S"<method-wrapper '__delattr__' of SSLError object>"
p59
sS'__repr__'
p60
S"<method-wrapper '__repr__' of SSLError object>"
p61
sS'__hash__'
p62
S"<method-wrapper '__hash__' of SSLError object>"
p63
ssS'evalue'
p64
S"('The read operation timed out',)"
p65
sS'frames'
p66
(lp67
(dp68
S'file'
p69
S'/home/ubuntu/webnettools/web2py/gluon/rocket.py'
p70
sS'dump'
p71
(dp72
S'self'
p73
S'<WSGIWorker(Thread-11, started daemon 140634694326016)>'
p74
sS'conn'
p75
S'<gluon.rocket.Connection object>'
p76
sS'self.run_app'
p77
S'<bound method WSGIWorker.run_app of <WSGIWorker(Thread-11, started daemon 140634694326016)>>'
p78
ssS'lnum'
p79
I1337
sS'lines'
p80
(dp81
I1332
S'            # Enter connection serve loop'
p82
sI1333
S'            while True:'
p83
sI1334
S'                if __debug__:'
p84
sI1335
S"                    self.err_log.debug('Serving a request')"
p85
sI1336
S'                try:'
p86
sI1337
S'                    self.run_app(conn)'
p87
sI1338
S'                except:'
p88
sI1339
S'                    exc = sys.exc_info()'
p89
sI1340
S'                    handled = self._handleError(*exc)'
p90
sI1341
S'                    if handled:'
p91
ssS'call'
p92
S'(self=<WSGIWorker(Thread-11, started daemon 140634694326016)>)'
p93
sS'func'
p94
S'run'
p95
sa(dp96
g69
S'/home/ubuntu/webnettools/web2py/gluon/rocket.py'
p97
sg71
(dp98
S'self'
p99
S'<WSGIWorker(Thread-11, started daemon 140634694326016)>'
p100
sS'self.environ'
p101
S"{'HTTPS': 'on', 'HTTP_ACCEPT': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8', 'HTTP_ACCEPT_ENCODING': 'gzip, deflate, br', 'HTTP_ACCEPT_LANGUAGE': 'en-US,en;q=0.5', 'HTTP_CONNECTION': 'keep-alive', 'HTTP_COOKIE': 'session_id_ssllabs=127.0.0.1-6afd1b75-1eab-433e-...in=127.0.0.1-0c316ae1-d9aa-4620-b80f-bd558b0f525f', 'HTTP_HOST': 'localhost:8000', 'HTTP_REFERER': 'https://localhost:8000/ssllabs/tools/ping', 'HTTP_UPGRADE_INSECURE_REQUESTS': '1', 'HTTP_USER_AGENT': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0', ...}"
p102
sS'sock_file'
p103
S'<socket._fileobject object>'
p104
sS'environ'
p105
S'undefined'
p106
sS'self.build_environ'
p107
S'<bound method WSGIWorker.build_environ of <WSGIWorker(Thread-11, started daemon 140634694326016)>>'
p108
sS'conn'
p109
S'<gluon.rocket.Connection object>'
p110
ssg79
I1830
sg80
(dp111
I1825
S'        else:'
p112
sI1826
S'            sock_file = conn.makefile(BUF_SIZE)'
p113
sI1827
S''
sI1828
S'        try:'
p114
sI1829
S'            # Read the headers and build our WSGI environment'
p115
sI1830
S'            self.environ = environ = self.build_environ(sock_file, conn)'
p116
sI1831
S''
sI1832
S'            # Handle 100 Continue'
p117
sI1833
S"            if environ.get('HTTP_EXPECT', '') == '100-continue':"
p118
sI1834
S"                res = environ['SERVER_PROTOCOL'] + ' 100 Continue\\r\\n\\r\\n'"
p119
ssg92
S'(self=<WSGIWorker(Thread-11, started daemon 140634694326016)>, conn=<gluon.rocket.Connection object>)'
p120
sg94
S'run_app'
p121
sa(dp122
g69
S'/home/ubuntu/webnettools/web2py/gluon/rocket.py'
p123
sg71
(dp124
S'sock_file'
p125
S'<socket._fileobject object>'
p126
sS'self.read_request_line'
p127
S'<bound method WSGIWorker.read_request_line of <W...rker(Thread-11, started daemon 140634694326016)>>'
p128
sS'self'
p129
S'<WSGIWorker(Thread-11, started daemon 140634694326016)>'
p130
sS'request'
p131
g106
ssg79
I1650
sg80
(dp132
I1645
S'                                      "wsgiorg.futures": executor.futures})'
p133
sI1646
S''
sI1647
S'    def build_environ(self, sock_file, conn):'
p134
sI1648
S'        """ Build the execution environment. """'
p135
sI1649
S'        # Grab the request line'
p136
sI1650
S'        request = self.read_request_line(sock_file)'
p137
sI1651
S''
sI1652
S'        # Copy the Base Environment'
p138
sI1653
S'        environ = self.base_environ.copy()'
p139
sI1654
S''
ssg92
S'(self=<WSGIWorker(Thread-11, started daemon 140634694326016)>, sock_file=<socket._fileobject object>, conn=<gluon.rocket.Connection object>)'
p140
sg94
S'build_environ'
p141
sa(dp142
g69
S'/home/ubuntu/webnettools/web2py/gluon/rocket.py'
p143
sg71
(dp144
S'sock_file'
p145
S'<socket._fileobject object>'
p146
sS'sock_file.readline'
p147
S'<bound method _fileobject.readline of <socket._fileobject object>>'
p148
sS'd'
g106
ssg79
I1388
sg80
(dp149
I1383
S''
sI1384
S'    def read_request_line(self, sock_file):'
p150
sI1385
S"        self.request_line = ''"
p151
sI1386
S'        try:'
p152
sI1387
S'            # Grab the request line'
p153
sI1388
S'            d = sock_file.readline()'
p154
sI1389
S'            if PY3K:'
p155
sI1390
S"                d = d.decode('ISO-8859-1')"
p156
sI1391
S''
sI1392
S"            if d == '\\r\\n':"
p157
ssg92
S'(self=<WSGIWorker(Thread-11, started daemon 140634694326016)>, sock_file=<socket._fileobject object>)'
p158
sg94
S'read_request_line'
p159
sa(dp160
g69
S'/usr/lib/python2.7/socket.py'
p161
sg71
(dp162
S'self._sock.recv'
p163
g106
sS'self._sock'
p164
S'None'
p165
sS'self'
p166
S'<socket._fileobject object>'
p167
sS'self._rbufsize'
p168
S'8192'
p169
sS'data'
p170
g106
ssg79
I451
sg80
(dp171
I448
S'            self._rbuf = StringIO()  # reset _rbuf.  we consume it via buf.'
p172
sI449
S'            while True:'
p173
sI450
S'                try:'
p174
sI451
S'                    data = self._sock.recv(self._rbufsize)'
p175
sI452
S'                except error, e:'
p176
sI453
S'                    if e.args[0] == EINTR:'
p177
sI454
S'                        continue'
p178
sI455
S'                    raise'
p179
sI446
S''
sI447
S'            buf.seek(0, 2)  # seek end'
p180
ssg92
S'(self=<socket._fileobject object>, size=-1)'
p181
sg94
S'readline'
p182
sa(dp183
g69
S'/usr/lib/python2.7/ssl.py'
p184
sg71
(dp185
S'self.read'
p186
S'<bound method SSLSocket.read of <ssl.SSLSocket object>>'
p187
sS'self'
p188
S'<ssl.SSLSocket object>'
p189
sS'buflen'
p190
S'8192'
p191
ssg79
I756
sg80
(dp192
I751
S'        if self._sslobj:'
p193
sI752
S'            if flags != 0:'
p194
sI753
S'                raise ValueError('
p195
sI754
S'                    "non-zero flags not allowed in calls to recv() on %s" %'
p196
sI755
S'                    self.__class__)'
p197
sI756
S'            return self.read(buflen)'
p198
sI757
S'        else:'
p199
sI758
S'            return self._sock.recv(buflen, flags)'
p200
sI759
S''
sI760
S'    def recv_into(self, buffer, nbytes=None, flags=0):'
p201
ssg92
S'(self=<ssl.SSLSocket object>, buflen=8192, flags=0)'
p202
sg94
S'recv'
p203
sa(dp204
g69
S'/usr/lib/python2.7/ssl.py'
p205
sg71
(dp206
S'len'
p207
S'8192'
p208
sS'self'
p209
S'<ssl.SSLSocket object>'
p210
sS'self._sslobj.read'
p211
g106
sS'self._sslobj'
p212
S'None'
p213
sS'v'
g106
ssg79
I643
sg80
(dp214
I640
S'            if buffer is not None:'
p215
sI641
S'                v = self._sslobj.read(len, buffer)'
p216
sI642
S'            else:'
p217
sI643
S'                v = self._sslobj.read(len)'
p218
sI644
S'            return v'
p219
sI645
S'        except SSLError as x:'
p220
sI646
S'            if x.args[0] == SSL_ERROR_EOF and self.suppress_ragged_eofs:'
p221
sI647
S'                if buffer is not None:'
p222
sI638
S'            raise ValueError("Read on closed or unwrapped SSL socket.")'
p223
sI639
S'        try:'
p224
ssg92
S'(self=<ssl.SSLSocket object>, len=8192, buffer=None)'
p225
sg94
S'read'
p226
sasS'pyver'
p227
S'Python 2.7.12: /home/ubuntu/webnettools/bin/python (prefix: /home/ubuntu/webnettools)'
p228
sS'etype'
p229
S"<class 'ssl.SSLError'>"
p230
sS'date'
p231
S'Fri Feb  2 02:05:42 2018'
p232
sS'locals'
p233
(dp234
S'buffer'
p235
S'None'
p236
sS'x'
S"SSLError('The read operation timed out',)"
p237
sS'self'
p238
S'<ssl.SSLSocket object>'
p239
sS'len'
p240
S'8192'
p241
sssS'traceback'
p242
S'Traceback (most recent call last):\n  File "/home/ubuntu/webnettools/web2py/gluon/rocket.py", line 1337, in run\n    self.run_app(conn)\n  File "/home/ubuntu/webnettools/web2py/gluon/rocket.py", line 1830, in run_app\n    self.environ = environ = self.build_environ(sock_file, conn)\n  File "/home/ubuntu/webnettools/web2py/gluon/rocket.py", line 1650, in build_environ\n    request = self.read_request_line(sock_file)\n  File "/home/ubuntu/webnettools/web2py/gluon/rocket.py", line 1388, in read_request_line\n    d = sock_file.readline()\n  File "/usr/lib/python2.7/socket.py", line 451, in readline\n    data = self._sock.recv(self._rbufsize)\n  File "/usr/lib/python2.7/ssl.py", line 756, in recv\n    return self.read(buflen)\n  File "/usr/lib/python2.7/ssl.py", line 643, in read\n    v = self._sslobj.read(len)\nSSLError: (\'The read operation timed out\',)\n'
p243
s.